{"version":3,"sources":["context/ThemeProvider.tsx","components/App/index.tsx","index.tsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","black","background","color","white","themes","setThemes","Provider","value","App","context","useContext","themeDefault","setThemeDefault","e","state","useThemeContext","theme","toogleTheme","useEffect","document","body","style","backgroundColor","className","onClick","rootElement","getElementById","render"],"mappings":"uLAIO,MAAMA,EAAeC,wBAAc,IAsC3BC,MApCf,UAAuB,SAAEC,IAAwB,MAAD,EAClBC,mBAAwB,CAClDC,MAAO,CACLC,WAAY,UACZC,MAAO,WAETC,MAAO,CACLF,WAAY,UACZC,MAAO,aARmC,mBACvCE,EADuC,KAC/BC,EAD+B,KAW9C,OACE,cAACV,EAAaW,SAAd,CAAuBC,MAAO,CAAEH,SAAQC,aAAxC,SACGP,K,MCfQ,SAASU,IAAO,MAAD,EDoBvB,WAIJ,IAAD,IACA,MAAMC,EAAUC,qBAAWf,GAD3B,EAEwCI,mBAAS,SAFjD,mBAEOY,EAFP,KAEqBC,EAFrB,KAWA,MAAO,CAFY,UAAjBD,EAAA,UAA2BF,EAAQL,cAAnC,aAA2B,EAAgBD,MAA3C,UAAmDM,EAAQL,cAA3D,aAAmD,EAAgBJ,MALrE,SAAqBa,GACnBD,GAAiBE,GAA4B,UAAjBH,EAA2B,QAAU,WAMvCA,GClCCI,GADD,mBACrBC,EADqB,KACdC,EADc,KAO5B,OALAC,qBAAU,KACJF,IACFG,SAASC,KAAKC,MAAMC,gBAAkBN,EAAMf,cAE7C,CAACe,IAEF,gCACE,sBAAKO,UAAU,MAAf,UACE,oBAAIF,MAAO,CAAEnB,MAAK,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAOd,OAA3B,oBACA,oBAAImB,MAAO,CAAEnB,MAAK,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAOd,OAA3B,sDAIF,wBAAQsB,QAASP,EAAjB,4BCdN,MAAMQ,EAAcN,SAASO,eAAe,QAC5CC,iBACE,cAAC,EAAD,UACE,cAAC,EAAD,MAEFF,K","file":"static/js/main.fb448fe7.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nimport { IChildren, ITheme, IThemeContext, IThemeItem } from './../interfaces';\r\n\r\nexport const ThemeContext = createContext({});\r\n\r\nfunction ThemeProvider({ children }: IChildren) {\r\n  const [themes, setThemes] = useState<ITheme | null>({\r\n    black: {\r\n      background: '#000000',\r\n      color: '#FFFFFF',\r\n    },\r\n    white: {\r\n      background: '#FFFFFF',\r\n      color: '#000000',\r\n    },\r\n  });\r\n  return (\r\n    <ThemeContext.Provider value={{ themes, setThemes }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useThemeContext(): [\r\n  IThemeItem | undefined,\r\n  (event: React.MouseEvent<HTMLButtonElement>) => void,\r\n  string\r\n] {\r\n  const context = useContext(ThemeContext);\r\n  const [themeDefault, setThemeDefault] = useState('black');\r\n\r\n  function toogleTheme(e: React.MouseEvent): void {\r\n    setThemeDefault((state) => (themeDefault === 'white' ? 'black' : 'white'));\r\n  }\r\n\r\n  const theme: IThemeItem | undefined =\r\n    themeDefault === 'white' ? context.themes?.white : context.themes?.black;\r\n\r\n  return [theme, toogleTheme, themeDefault];\r\n}\r\n\r\nexport default ThemeProvider;\r\n","import { useEffect } from 'react';\r\nimport { useThemeContext } from '../../context/ThemeProvider';\r\nimport './index.css';\r\n\r\nexport default function App() {\r\n  const [theme, toogleTheme] = useThemeContext();\r\n  useEffect(() => {\r\n    if (theme) {\r\n      document.body.style.backgroundColor = theme.background;\r\n    }\r\n  }, [theme]);\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <h1 style={{ color: theme?.color }}>Themas</h1>\r\n        <h2 style={{ color: theme?.color }}>\r\n          Mudando a cor do layout While e Black\r\n        </h2>\r\n      </div>\r\n      <button onClick={toogleTheme}>Mudar a cor</button>\r\n    </div>\r\n  );\r\n}\r\n","import { render } from \"react-dom\";\r\n\r\nimport ThemeProvider from \"./context/ThemeProvider\";\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(\r\n  <ThemeProvider>\r\n    <App />\r\n  </ThemeProvider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}